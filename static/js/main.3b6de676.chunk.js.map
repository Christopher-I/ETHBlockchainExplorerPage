{"version":3,"sources":["images/errorpage.jpg","components/HeaderAndSearchBar.js","components/AllTransactionsTable.js","components/BlockInformation.js","components/InvalidPath.js","index.js"],"names":["module","exports","__webpack_require__","p","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleFormSubmit","state","query","length","getAddressInfo","isNaN","invalidPath","getBlockInfo","handleInputChange","e","setState","target","value","bind","assertThisInitialized","getAccountInfo","error","isLoaded","blockInfo","accountInfo","loading","event","history","push","concat","react_default","a","createElement","Container","Segment","Menu","style","marginTop","marginBottom","height","background","marginLeft","fontSize","route","className","color","href","Icon","name","size","position","Item","Form","onSubmit","Input","width","action","icon","onChange","placeholder","searchUpdated","children","React","Component","withRouter","MyComponent","match","params","address","ERC20Loading","items","ERC20Data","columns","title","dataIndex","key","render","text","tag","toFixed","ERC20columns","row","Math","pow","tokenDecimal","data","etherPrice","_this2","fetch","then","res","json","result","ethusd","_this3","balance","_this4","_this5","getEtherPrice","getAllTransactions","getERC20Transactions","getBalance","_this$state","TabPane","Tabs","componentDidMount","message","HeaderAndSearchBar","toLocaleString","currency","tabs","defaultActiveKey","callback","tab","table","rowKey","record","blockNumber","expandedRowRender","margin","Date","timeStamp","toLocaleDateString","hash","nonce","blockHash","transactionIndex","gas","gasPrice","contractAddress","cumulativeGasUsed","gasUsed","confirmations","dataSource","scroll","x","tokenSymbol","tokenName","BlockInformation","blocknumber","Card","Content","Header","Description","blockMiner","blockReward","extra","uncleInclusionReward","BlockInfo","Image","src","ErrorImage","react_router_dom","to","replace","Button","primary","ReactDOM","react_router","exact","path","component","Home","AllTransactions","InvalidPath","document","getElementById"],"mappings":"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","file":"static/js/main.3b6de676.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/errorpage.dff0fa0a.jpg\";","import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport { Container, Segment, Icon, Menu, Form } from \"semantic-ui-react\";\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.getBlockInfo = this.getBlockInfo.bind(this);\n    this.getAccountInfo = this.getAddressInfo.bind(this);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      query: \"\",\n      blockInfo: [],\n      accountInfo: [],\n      loading: false\n    };\n  }\n\n  //redirect page depending on user input\n  handleFormSubmit = () => {\n    if (this.state.query.length > 10 && this.state.query[1] === \"x\") {\n      this.getAddressInfo(this.state.query);\n    } else if (!isNaN(this.state.query)) {\n      this.getBlockInfo(this.state.query);\n    } else {\n      this.invalidPath(this.state.query);\n    }\n  };\n\n  //update state with search input\n  handleInputChange = e => {\n    this.setState({\n      query: e.target.value\n    });\n  };\n\n  //Push page to invalid page if user entry is not recognized\n  invalidPath(event) {\n    this.props.history.push(`/invalidPath/${this.state.query}`);\n  }\n  //Push page to block information page if user enters block number\n  getBlockInfo(event) {\n    this.props.history.push(`/block/${this.state.query}`);\n  }\n  //Push page to address information page if user enters address number\n  getAddressInfo(event) {\n    this.props.history.push(`/address/${this.state.query}`);\n  }\n\n  render() {\n    return (\n      <Container>\n        <Segment>\n          <Menu\n            style={{\n              marginTop: \"10px\",\n              marginBottom: \"30px\",\n              height: \"100px\",\n              background: \"#33445e\"\n            }}\n          >\n            <div\n              style={{\n                marginTop: \"30px\",\n                marginLeft: \"10px\",\n                fontSize: \"13px\"\n              }}\n            >\n              <div route=\"/\">\n                <a className=\"item\" style={{ color: \"teal\" }} href=\"/\">\n                  <Icon name=\"home\" size=\"large\" />\n                </a>\n              </div>\n            </div>\n            <div style={{ marginTop: \"10px\" }} />\n            <Menu.Menu position=\"right\">\n              <Menu.Item>\n                <Form onSubmit={this.handleFormSubmit}>\n                  <div\n                    style={{\n                      marginBottom: \"15px\",\n                      color: \"white\",\n                      fontSize: \"15px\"\n                    }}\n                  >\n                    Ethereum Blockchain Explorer\n                  </div>\n                  <Form.Input\n                    loading={this.props.loading}\n                    style={{ width: \"900px\" }}\n                    action={{ icon: \"search\" }}\n                    value={this.state.query}\n                    onChange={this.handleInputChange}\n                    placeholder=\"Search by Address/Block Number...example: 0xde0b295669a9fd93d5f28d9ec85e40f4cb697bae\"\n                  />\n                </Form>\n              </Menu.Item>\n            </Menu.Menu>\n          </Menu>\n          <div>{this.state.searchUpdated}</div>\n          {this.props.children}\n        </Segment>\n      </Container>\n    );\n  }\n}\nexport default withRouter(SearchBar);\n","import React from \"react\";\nimport { Table, Tag, Tabs } from \"antd\";\nimport { Container } from \"semantic-ui-react\";\nimport HeaderAndSearchBar from \"./HeaderAndSearchBar\";\nimport \"../align.css\";\n\nclass MyComponent extends React.Component {\n  constructor(props) {\n    super(props);\n    //error check to ensure address is ethereum address if not,reroute  send to invalid page\n    if (this.props.match.params.address[1] !== \"x\") {\n      this.props.history.push(\n        `/invalidPath/${this.props.match.params.address}`\n      );\n    }\n\n//declaration of all states and table data\n    this.state = {\n      error: null,\n      isLoaded: false,\n      loading: true,\n      ERC20Loading: true,\n      items: [],\n      ERC20Data: [],\n      //column data for all transaction table\n      columns: [\n        {\n          title: \"Block Number\",\n          dataIndex: \"blockNumber\",\n          key: \"blockNumber\",\n          render: text => <a href={\"/block/\" + text}>{text}</a>\n        },\n        {\n          title: \"From\",\n          dataIndex: \"from\",\n          key: \"from\",\n          render: text => <a href={text}>{text}</a>\n        },\n        {\n          title: \"\",\n          key: \"from1\",\n          dataIndex: \"from\",\n          render: text => {\n            if (text === this.props.match.params.address) {\n              return <Tag color=\"red\">out</Tag>;\n            } else {\n              return <Tag color=\"green\">in</Tag>;\n            }\n          }\n        },\n        {\n          title: \"To\",\n          dataIndex: \"to\",\n          key: \"to\",\n          render: text => <a href={text}>{text}</a>\n        },\n        {\n          title: \"Value(ETH)\",\n          dataIndex: \"value\",\n          key: \"value\",\n          render: text => {\n            return (\n              <p color=\"green\"> {(text / 1000000000000000000).toFixed(2)} </p>\n            );\n          }\n        }\n      ],\n      //column dats for ERC20 transactions table\n      ERC20columns: [\n        {\n          title: \"Block Number\",\n          dataIndex: \"blockNumber\",\n          key: \"blockNumber\",\n          render: text => <a href={\"/block/\" + text}>{text}</a>\n        },\n        {\n          title: \"From\",\n          dataIndex: \"from\",\n          key: \"from2\",\n          render: text => <a href={text}>{text}</a>\n        },\n        {\n          title: \"\",\n          key: \"from3\",\n          dataIndex: \"from\",\n          render: text => {\n            if (text === this.props.match.params.address) {\n              return <Tag color=\"red\">out</Tag>;\n            } else {\n              return <Tag color=\"green\">in</Tag>;\n            }\n          }\n        },\n        {\n          title: \"To\",\n          dataIndex: \"to\",\n          key: \"to\",\n          render: text => <a href={text}>{text}</a>\n        },\n        {\n          title: \"Token Symbol\",\n          dataIndex: \"tokenSymbol\",\n          key: \"tokenSymbol\",\n          render: text => <p>{text}</p>\n        },\n        {\n          title: \"Value\",\n          dataIndex: \"value\",\n          key: \"value\",\n          render: (text, row) => {\n            return (\n              <p color=\"green\">\n                {\" \"}\n                {(text / Math.pow(10, row.tokenDecimal)).toFixed(3)}{\" \"}\n              </p>\n            );\n          }\n        }\n      ],\n      data: [],\n      etherPrice: \"\"\n    };\n  }\n\n  static getInitialProps(props) {\n    //retrieve address from URI\n    let address = this.props.match.params.address;\n\n    return {\n      address\n    };\n  }\n\n//fetch price of ether from ether scan\n  getEtherPrice() {\n    fetch(\n      \"https://api.etherscan.io/api?module=stats&action=ethprice&apikey=G3YFDTNGGMTBCRRQEZ65CC6NR6RB4HC47U\"\n    )\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            etherPrice: result.result.ethusd,\n            isLoaded: true\n          });\n        },\n\n        // Handle errors.\n        error => {\n          this.setState({\n            error\n          });\n        }\n      );\n  }\n\n//get address balance from ether scan\n  getBalance() {\n    fetch(\n      `https://api.etherscan.io/api?module=account&action=balance&address=${\n        this.props.match.params.address\n      }&tag=latest&apikey=G3YFDTNGGMTBCRRQEZ65CC6NR6RB4HC47U`\n    )\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n\n            balance: result.result\n          });\n        },\n\n        // Handle errors.\n        error => {\n          this.setState({\n            isLoaded: true,\n\n            error\n          });\n        }\n      );\n  }\n//get all erc20 transactions to address from ether scan\n  getERC20Transactions() {\n    fetch(\n      `http://api.etherscan.io/api?module=account&action=tokentx&address=${\n        this.props.match.params.address\n      }&startblock=0&endblock=999999999&sort=asc&apikey=G3YFDTNGGMTBCRRQEZ65CC6NR6RB4HC47U`\n    )\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            ERC20Loading: false,\n            ERC20Data: result.result\n          });\n        },\n\n        // Handle errors.\n        error => {\n          this.setState({\n            isLoaded: true,\n\n            error\n          });\n        }\n      );\n  }\n//get all tra to address from ether scan\n  getAllTransactions() {\n    fetch(\n      `http://api.etherscan.io/api?module=account&action=txlist&address=${\n        this.props.match.params.address\n      }&startblock=0&endblock=99999999&sort=asc&apikey=G3YFDTNGGMTBCRRQEZ65CC6NR6RB4HC47U`\n    )\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            loading: false,\n            data: result.result\n          });\n        },\n\n        // Handle errors.\n        error => {\n          this.setState({\n            isLoaded: true,\n            loading: false,\n            error\n          });\n        }\n      );\n  }\n\n  componentDidMount() {\n    //start loading\n    this.setState.loading = true;\n    this.setState.ERC20Loading = true;\n\n    //call neccesary function to gather and organize data\n    this.getEtherPrice();\n    this.getAllTransactions();\n    this.getERC20Transactions();\n    this.getBalance();\n  }\n\n  //call render method\n  render() {\n    //declare state variables\n    const {\n      error,\n      isLoaded,\n      etherPrice,\n      balance,\n      columns,\n      loading,\n      data,\n      ERC20Loading,\n      ERC20columns,\n      ERC20Data\n    } = this.state;\n    //declare tabs\n    let TabPane = Tabs.TabPane;\n    //check if data has been loaded if not, call componentDidMount to reload data\n    if (!isLoaded) {\n      this.componentDidMount();\n    }\n    //error check \n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else {\n      this.setState.isLoaded = false; //reset data loaded valve,\n      return (\n        <Container style={{ width: \"2500px\" }}>\n          <HeaderAndSearchBar loading={this.state.loading}>\n            <div\n              className=\"rowC\"\n              style={{\n                marginBottom: \"30px\"\n              }}\n            >\n              <h4\n                style={{\n                  marginLeft: \"15px\",\n                  fontSize: \"15px\",\n                  color: \"black\"\n                }}\n              >\n                Address:\n              </h4>\n              <h4\n                style={{\n                  marginLeft: \"13px\",\n                  fontSize: \"15px\",\n                  color: \"grey\"\n                }}\n              >\n                {this.props.match.params.address}\n              </h4>\n              <h4\n                style={{ marginLeft: \"20px\", fontSize: \"15px\", color: \"black\" }}\n              >\n                Balance(ETH):\n              </h4>\n              <h4\n                style={{\n                  marginLeft: \"10px\",\n                  fontSize: \"15px\",\n                  color: \"#32CD32\"\n                }}\n              >\n                {(balance / 1000000000000000000).toFixed(5)}\n              </h4>\n\n              <h4\n                style={{ marginLeft: \"20px\", fontSize: \"15px\", color: \"black\" }}\n              >\n                Balance(USD):\n              </h4>\n              <h4\n                style={{\n                  marginLeft: \"10px\",\n                  fontSize: \"15px\",\n                  color: \"#32CD32\"\n                }}\n              >\n                {((etherPrice * balance) / 1000000000000000000).toLocaleString(\n                  \"en-US\",\n                  {\n                    style: \"currency\",\n                    currency: \"USD\"\n                  }\n                )}\n              </h4>\n            </div>\n            <Tabs defaultActiveKey=\"1\" onChange={this.callback}>\n              <TabPane tab=\"All transactions\" key=\"1\">\n                <Table\n                  rowKey={record => record.blockNumber}\n                  loading={loading}\n                  columns={columns}\n                  expandedRowRender={record => (\n                    <div style={{ margin: 0 }}>\n                      <p>\n                        Full Transfer Value :{\" \"}\n                        {(record.value / 1000000000000000000).toFixed(15)} Ether\n                      </p>\n                      <p>\n                        Date(MM-DD-YYYY):{\" \"}\n                        {new Date(record.timeStamp * 1000).toLocaleDateString(\n                          \"en-US\"\n                        )}\n                      </p>\n                      <p>Hash : {record.hash} </p>\n                      <p>Nonce : {record.nonce}</p>\n                      <p>Block Hash : {record.blockHash} </p>\n                      <p>Transaction Index : {record.transactionIndex}</p>\n                      <p>Gas : {record.gas} </p>\n                      <p>Gas Price : {record.gasPrice}</p>\n                      {/*<p>Input : {record.input}</p>*/}\n                      <p>Contract Address : {record.contractAddress}</p>\n                      <p>Cumulative Gas Used : {record.cumulativeGasUsed}</p>\n                      <p>Gas Used : {record.gasUsed}</p>\n                      <p>Confirmations : {record.confirmations}</p>\n                    </div>\n                  )}\n                  dataSource={data}\n                />\n              </TabPane>\n              <TabPane tab=\"ERC20 Transactions\" key=\"2\">\n                <Table\n                  rowKey={record => record.blockNumber}\n                  loading={ERC20Loading}\n                  columns={ERC20columns}\n                  scroll={{ x: 1300 }}\n                  expandedRowRender={record => (\n                    <div style={{ margin: 0 }}>\n                      <p>\n                        Full Transfer Value : {record.value}\n                        {record.tokenSymbol}\n                      </p>\n                      <p>Token Name : {record.tokenName}</p>\n                      <p>\n                        Date(MM-DD-YYYY):{\" \"}\n                        {new Date(record.timeStamp * 1000).toLocaleDateString(\n                          \"en-US\"\n                        )}\n                      </p>\n                      <p>Hash : {record.hash} </p>\n                      <p>Nonce : {record.nonce}</p>\n                      <p>Block Hash : {record.blockHash} </p>\n                      <p>Transaction Index : {record.transactionIndex}</p>\n                      <p>Gas : {record.gas} </p>\n                      <p>Gas Price : {record.gasPrice}</p>\n                      {/*<p>Input : {record.input}</p>*/}\n                      <p>Contract Address : {record.contractAddress}</p>\n                      <p>Cumulative Gas Used : {record.cumulativeGasUsed}</p>\n                      <p>Gas Used : {record.gasUsed}</p>\n                      <p>Confirmations : {record.confirmations}</p>\n                    </div>\n                  )}\n                  dataSource={ERC20Data}\n                />\n              </TabPane>\n            </Tabs>\n          </HeaderAndSearchBar>\n        </Container>\n      );\n    }\n  }\n}\n\nexport default MyComponent;\n","import React from \"react\";\nimport { Container, Card } from \"semantic-ui-react\";\nimport HeaderAndSearchBar from \"./HeaderAndSearchBar\";\n\nclass BlockInformation extends React.Component {\n  constructor(props) {\n    super(props);\n    //set state variables\n    this.state = {\n      error: null,\n      isLoaded: false,\n      blockInfo: []\n    };\n  }\n//retrieve address from URI\n  static async getInitialProps(props) {\n    const address = this.props.match.params.blocknumber;\n\n    return {\n      address\n    };\n  }\n//get Block Information from etherscan\n  getBlockInfo() {\n    fetch(\n      `https://api.etherscan.io/api?module=block&action=getblockreward&blockno=${\n        this.props.match.params.blocknumber\n      }&apikey=G3YFDTNGGMTBCRRQEZ65CC6NR6RB4HC47U`\n    )\n      .then(res => res.json())\n      .then(\n        result => {\n          this.setState({\n            isLoaded: true,\n            blockInfo: result.result\n          });\n        },\n\n        // Handle errors.\n        error => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      );\n  }\n  componentDidMount() {\n    //call etherscan API and edit state with result\n    this.getBlockInfo();\n  }\n\n  render() {\n    const { error, isLoaded, blockInfo } = this.state;\n    //check if data has been loaded from API call\n    if (!isLoaded) {\n      this.setState.isLoaded = true;\n      this.componentDidMount();\n    }\n\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else {\n      this.setState.isLoaded = false; // reset loaded valve to indicate that data has been loaded\n      return (\n        <Container>\n          <HeaderAndSearchBar>\n            <Card style={{ width: \"600px\", height: \"200x\" }}>\n              <Card.Content>\n                <Card.Header>Block Number: {blockInfo.blockNumber}</Card.Header>\n\n                <Card.Description>\n                  Time Stamp: {blockInfo.timeStamp}\n                </Card.Description>\n                <Card.Description>\n                  Date:{\" \"}\n                  {new Date(blockInfo.timeStamp * 1000).toLocaleDateString(\n                    \"en-US\"\n                  )}\n                </Card.Description>\n                <Card.Description>\n                  Mined by:\n                  <a href={`/address/${this.state.blockInfo.blockMiner}`}>\n                    {blockInfo.blockMiner}\n                  </a>\n                </Card.Description>\n                <Card.Description>\n                  Block Reward: {blockInfo.blockReward / 1000000000000000000}\n                  Ether\n                </Card.Description>\n                <ul\n                  style={{\n                    marginLeft: \"13px\",\n                    fontSize: \"15px\",\n                    color: \"grey\"\n                  }}\n                />\n              </Card.Content>\n\n              <Card.Content extra style={{ width: \"600px\", height: \"200x\" }}>\n                Uncle Inclusion Reward:{\" \"}\n                {blockInfo.uncleInclusionReward / 1000000000000000000}\n                Ether\n              </Card.Content>\n            </Card>\n          </HeaderAndSearchBar>\n        </Container>\n      );\n    }\n  }\n}\n\nexport default BlockInformation;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Image, Container, Button, Card } from \"semantic-ui-react\";\nimport HeaderAndSearchBar from \"./HeaderAndSearchBar\";\nimport ErrorImage from \"../images/errorpage.jpg\";\n\nclass BlockInfo extends React.Component {\n  constructor(props) {\n    super(props);\n    //set state variables\n    this.state = {\n      invalidPath: \"\"\n    };\n  }\n\n  render() {\n    //check if data has been loaded\n    if (!this.state.isLoaded) {\n      this.setState.isLoaded = true;\n    }\n    const { error } = this.state;\n    //error check\n    if (error) {\n      return <div>Error: {error.message}</div>;\n    } else {\n      this.setState.isLoaded = false;//reset loaded valve\n      return (\n        <Container>\n          <HeaderAndSearchBar>\n            <Card style={{ width: \"1600px\", height: \"200x\" }}>\n              <Image src={ErrorImage} position=\"center\" />\n              <Card.Content>\n                <Card.Header>Search not found Oops!</Card.Header>\n                <Card.Description>\n                  <div>\n                    The search string you entered was:{\" \"}\n                    {this.props.match.params.invalidPath}\n                    <p>Sorry! This is an invalid search string.</p>\n                    <Link to=\"/\" replace>\n                      <Button primary> Home</Button>\n                    </Link>\n                  </div>\n                </Card.Description>\n              </Card.Content>\n            </Card>\n          </HeaderAndSearchBar>\n        </Container>\n      );\n    }\n  }\n}\n\nexport default BlockInfo;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/HeaderAndSearchBar\";\nimport AllTransactions from \"./components/AllTransactionsTable\";\nimport BlockInformation from \"./components/BlockInformation\";\nimport InvalidPath from \"./components/InvalidPath\";\nimport \"antd/dist/antd.css\";\n\n\n//definition of all routes and pages\nReactDOM.render(\n  <Router>\n    <div>\n      <Route exact path=\"/\" component={Home} />\n      <Route path=\"/address/:address\" component={AllTransactions} />\n      <Route path=\"/block/:blocknumber\" component={BlockInformation} />\n      <Route path=\"/invalidPath/:invalidPath\" component={InvalidPath} />\n    </div>\n  </Router>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}